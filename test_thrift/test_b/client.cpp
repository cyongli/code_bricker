// This autogenerated skeleton file illustrates how to build a server.
// You should copy it to another filename to avoid overwriting it.

#include<stdio.h>
#include<unistd.h>
#include <sys/time.h>

#include "gen-cpp/trans_heartbeat.h"
#include <thrift/protocol/TBinaryProtocol.h>
#include <thrift/transport/TSocket.h>
#include <thrift/transport/TTransportUtils.h>

using namespace std;
using namespace ::apache::thrift;
using namespace ::apache::thrift::protocol;
using namespace ::apache::thrift::transport;

using boost::shared_ptr;

int main(int argc, char **argv) {
  shared_ptr<TTransport> socket(new TSocket("localhost",9090));
  shared_ptr<TTransport> transport(new TBufferedTransport(socket));
  shared_ptr<TProtocol> protocol(new TBinaryProtocol(transport));
  trans_heartbeatClient client(protocol);

  try{
    transport->open();
    heartbeat hb;
    hb.hostname="localhost";
    hb.cpu_util=0.35;
    hb.mem_util=0.42;
    hb.disk_util=0.24;
    client.trans_heartbeat(hb);
    transport->close();
  } catch(TException &tx){
    printf("ERROR: %s\n",tx.what());
  }

  return 0;
}
